/*
 * Copyright 2013 Chris Banes
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

//apply plugin: 'java-library'
//apply plugin: 'maven-publish'
//apply plugin: 'signing'
//apply plugin: 'com.vanniktech.maven.publish'
def isReleaseBuild() {
    return VERSION_NAME.contains("SNAPSHOT") == false
}

def isLocal() {
    return LOCAL.toBoolean()
}

def getReleaseRepositoryUrl() {
    return hasProperty('RELEASE_REPOSITORY_URL') && !isLocal() ? RELEASE_REPOSITORY_URL : uri(LOCAL_REPOSITORY_PATH + "/releases")
}

def getSnapshotRepositoryUrl() {
    return hasProperty('SNAPSHOT_REPOSITORY_URL') && !isLocal() ? SNAPSHOT_REPOSITORY_URL : uri(LOCAL_REPOSITORY_PATH + "/snapshots")
}

def getRepositoryUsername() {
    return hasProperty('NEXUS_USERNAME') ? NEXUS_USERNAME : ""
}

def getRepositoryPassword() {
    return hasProperty('NEXUS_PASSWORD') ? NEXUS_PASSWORD : ""
}

publishing {
    repositories {
        maven {
            name = 'local'
            def releasesRepoUrl = getReleaseRepositoryUrl()
            def snapshotsRepoUrl = getSnapshotRepositoryUrl()
            def repoUrl = isReleaseBuild() ? releasesRepoUrl : snapshotsRepoUrl
            allowInsecureProtocol = true
            println("repoUrl: " + repoUrl)
            url = repoUrl
        }
    }
}
//
//java {
//    withSourcesJar()
//    withJavadocJar()
//}
//
//mavenPublishing {
//    coordinates(GROUP, POM_ARTIFACT_ID, VERSION_NAME)
//
//    // the following is optional
//    pom {
//        name = POM_NAME
//        packaging = POM_PACKAGING
//        description = POM_DESCRIPTION
//        url = POM_URL
//
//        scm {
//            url = POM_SCM_URL
//            connection = POM_SCM_CONNECTION
//            developerConnection = POM_SCM_DEV_CONNECTION
//        }
//
//        licenses {
//            license {
//                name = POM_LICENCE_NAME
//                url = POM_LICENCE_URL
//                distribution = POM_LICENCE_DIST
//            }
//        }
//
//        developers {
//            developer {
//                id = POM_DEVELOPER_ID
//                name = POM_DEVELOPER_NAME
//            }
//        }
//    }
//}
